<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Transaksi extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('M_transaksi');
        $this->load->library('form_validation');
        date_default_timezone_set('Asia/Jakarta');
    }

    public function index()
    {
        $transaksi = $this->M_transaksi->views();
        $data = array(
            'konten' => 'transaksi/index',
            'data_transaksi' => $transaksi,
        );
        $this->load->view('v_index', $data);
    }

    public function create() 
    {
        $transaksi = $this->M_transaksi->viewsd();
        $data = array(
            'data_transaksi' => $transaksi,
            'konten' => 'transaksi/form',
            'button' => 'Create',
            'action' => site_url('transaksi/create_action'),
            'kode_sales' => set_value('kode_sales'),
            'tgl' => set_value('tgl'),
            'kode_customer' => set_value('kode_customer'),
            'name' => set_value('name'),
            'telp' => set_value('telp'),
            'diskon' => set_value('diskon'),
            'ongkir' => set_value('ongkir')
	    );
        $this->load->view('v_index', $data);
    }
    
    public function create_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->create();
        } else {            
            $data = array(
                'kode' => $this->input->post('kode'),
                'nama' => $this->input->post('nama'),
                'harga' => $this->input->post('harga')
            );
            $a = $this->M_transaksi->adds(json_encode($this->input->post()));
            redirect(site_url('transaksi'));
            //print_r($a);
        }
    }
    
    public function get_by($id) 
    {
        $row1 = $this->M_transaksi->getIdsd($id);
        $row2 = $this->M_transaksi->getIdsd($id);
        $show1 = $row1->data;
        $show2 = $row2->data;
        if ($show) { 
            $data = array(
                'data_transaksi' => $show1,
                'data_sel' => $show2,
                'konten' => 'transaksi/form',
                'button' => 'Create',
                'action' => site_url('transaksi/update_action'),
                'kode_sales' => set_value('kode_sales'),
                'tgl' => set_value('tgl'),
                'kode_customer' => set_value('kode_customer'),
                'name' => set_value('name'),
                'telp' => set_value('telp'),
                'diskon' => set_value('diskon'),
                'ongkir' => set_value('ongkir')
            );
            $this->load->view('v_index', $data);
        } else {
            redirect(site_url('transaksi'));
        }
    }
    
    public function update_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->update($this->input->post('kode', TRUE));
        } else {

            $this->M_transaksi->update($this->input->post('kode', TRUE), json_encode($this->input->post()));
            redirect(site_url('transaksi'));
        }
    }
    
    public function delete($id) 
    {
        $row = $this->M_transaksi->getId($id);

        if ($row) {
            $this->M_transaksi->delete($id);
            redirect(site_url('transaksi'));
        } else {
            redirect(site_url('transaksi'));
        }
    }

    public function _rules() 
    {
	$this->form_validation->set_rules('kode', 'Kode', 'trim|required');
	$this->form_validation->set_rules('nama', 'Nama', 'trim|required');
	$this->form_validation->set_rules('harga', 'Harga', 'trim|required');
	$this->form_validation->set_error_delimiters('<span class="text-danger">', '</span>');
    }

}

/* End of file transaksi.php */
/* Location: ./application/controllers/transaksi.php */
/* Please DO NOT modify this information : */
/* Generated by Harviacode Codeigniter CRUD Generator 2017-11-02 11:43:24 */
/* http://harviacode.com */